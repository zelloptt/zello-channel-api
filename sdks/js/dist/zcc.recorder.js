!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Recorder=e():(t.ZCC=t.ZCC||{},t.ZCC.Recorder=e())}(window,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=29)}({0:function(t,e){var i;i=function(){return this}();try{i=i||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(i=window)}t.exports=i},29:function(t,e,i){"use strict";(function(e){var i=function(){function t(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}(),n=function(){function t(e,i){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),!t.isRecordingSupported())throw new Error("Recording is not supported in this browser");this.options=Object.assign({bufferLength:4096,monitorGain:0,recordingGain:1},e),this.encoder=i,this.state="inactive"}return i(t,[{key:"clearStream",value:function(){this.stream&&(this.stream.getTracks?this.stream.getTracks().forEach(function(t){t.stop()}):this.stream.stop(),delete this.stream),this.audioContext&&(this.audioContext.close(),delete this.audioContext)}},{key:"getSampleRate",value:function(){return this.audioContext.sampleRate}},{key:"encodeBuffers",value:function(t){if("recording"===this.state){for(var e=[],i=0;i<t.numberOfChannels;i++)e[i]=t.getChannelData(i);this.ondata(e)}}},{key:"initAudioContext",value:function(){if(!this.audioContext){var e=t.getAudioContext();this.audioContext=new e}return this.audioContext}},{key:"initAudioGraph",value:function(){var t=this;this.encodeBuffers=function(){delete t.encodeBuffers},this.scriptProcessorNode=this.audioContext.createScriptProcessor(this.options.bufferLength,this.options.numberOfChannels,this.options.numberOfChannels),this.scriptProcessorNode.connect(this.audioContext.destination),this.scriptProcessorNode.onaudioprocess=function(e){t.encodeBuffers(e.inputBuffer)},this.monitorGainNode=this.audioContext.createGain(),this.setMonitorGain(this.options.monitorGain),this.monitorGainNode.connect(this.audioContext.destination),this.recordingGainNode=this.audioContext.createGain(),this.setRecordingGain(this.options.recordingGain),this.recordingGainNode.connect(this.scriptProcessorNode)}},{key:"initSourceNode",value:function(){var t=this;return this.stream&&this.sourceNode?e.Promise.resolve(this.sourceNode):e.navigator.mediaDevices.getUserMedia({audio:!0}).then(function(e){return t.stream=e,t.audioContext.createMediaStreamSource(e)})}},{key:"pause",value:function(){"recording"===this.state&&(this.state="paused")}},{key:"resume",value:function(){"paused"===this.state&&(this.state="recording")}},{key:"setRecordingGain",value:function(t){this.options.recordingGain=t,this.recordingGainNode&&this.audioContext&&this.recordingGainNode.gain.setTargetAtTime(t,this.audioContext.currentTime,.01)}},{key:"setMonitorGain",value:function(t){this.options.monitorGain=t,this.monitorGainNode&&this.audioContext&&this.monitorGainNode.gain.setTargetAtTime(t,this.audioContext.currentTime,.01)}},{key:"init",value:function(){var t=this;if("inactive"===this.state)return this.initAudioContext(),this.initAudioGraph(),this.initSourceNode().then(function(e){t.state="recording",t.sourceNode=e,t.sourceNode.connect(t.monitorGainNode),t.sourceNode.connect(t.recordingGainNode),t.onready()})}},{key:"stop",value:function(){"inactive"!==this.state&&(this.state="inactive",this.monitorGainNode.disconnect(),this.scriptProcessorNode.disconnect(),this.recordingGainNode.disconnect(),this.sourceNode.disconnect(),this.options.leaveStreamOpen||this.clearStream(),this.encoder.postMessage({command:"done"}))}},{key:"start",value:function(){}},{key:"ondata",value:function(t){}},{key:"onready",value:function(){}}],[{key:"getAudioContext",value:function(){return e.AudioContext||e.webkitAudioContext}},{key:"isRecordingSupported",value:function(){return t.getAudioContext()&&e.navigator&&e.navigator.mediaDevices&&e.navigator.mediaDevices.getUserMedia&&e.WebAssembly}}]),t}();t.exports=n}).call(this,i(0))}})});